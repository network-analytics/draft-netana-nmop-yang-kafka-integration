



NMOP                                                             T. Graf
Internet-Draft                                                  Swisscom
Intended status: Informational                          15 February 2024
Expires: 18 August 2024


       An Architecture for YANG-Push to Apache Kafka Integration
              draft-netana-nmop-yang-kafka-integration-00

Abstract

   This document describes the motivation and architecture of a native
   YANG-Push notifications and YANG Schema integration into Apache Kafka
   Message Broker and Confluent Schema Registry.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Operations and
   Management Area Working Group Working Group mailing list
   (nmop@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/nmop/.

   Source for this draft and an issue tracker can be found at
   https://github.com/network-analytics/draft-daisy-kafka-yang-
   integration/.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 18 August 2024.







Graf                     Expires 18 August 2024                 [Page 1]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Document Scope  . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
     1.3.  Origins of YANG-Push  . . . . . . . . . . . . . . . . . .   4
     1.4.  Origins of Apache Kafka . . . . . . . . . . . . . . . . .   5
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     2.1.  Preserve Semantics  . . . . . . . . . . . . . . . . . . .   5
     2.2.  Preserve Semantic Information . . . . . . . . . . . . . .   5
     2.3.  Standardize Data Processing Integration . . . . . . . . .   6
   3.  Elements of the Architecture  . . . . . . . . . . . . . . . .   6
     3.1.  YANG-Push Subscription  . . . . . . . . . . . . . . . . .   7
     3.2.  YANG-Push Publisher . . . . . . . . . . . . . . . . . . .   7
     3.3.  YANG-Push Receiver  . . . . . . . . . . . . . . . . . . .   8
     3.4.  YANG Schema Registry  . . . . . . . . . . . . . . . . . .   8
     3.5.  YANG Kafka Producer . . . . . . . . . . . . . . . . . . .   8
     3.6.  YANG Kafka Consumer . . . . . . . . . . . . . . . . . . .   9
     3.7.  YANG Time Series Database Ingestion . . . . . . . . . . .   9
   4.  Project Milestones  . . . . . . . . . . . . . . . . . . . . .   9
   5.  Open Points . . . . . . . . . . . . . . . . . . . . . . . . .  10
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   7.  Implementation Status . . . . . . . . . . . . . . . . . . . .  10
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  10
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  12
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  13









Graf                     Expires 18 August 2024                 [Page 2]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


1.  Introduction

   Nowadays network operators are using YANG [RFC7950] to model their
   configurations and obtain YANG modelled data from their networks.  It
   is well understood that plain text are initially intended for humans
   and need effort to make it machine readable due to the lack of
   semantics.  YANG modeled data is addressing this need.

   Increasingly more network operators organizing their data in a Data
   Mesh [Deh22] where a message broker such as Apache Kafka [Kaf11] or
   RabbitMQ [Rab07] facilitates the exchange of messages among data
   processing components like a stream processor to filter, enrich,
   correlate or aggregate, or a time series database to store data.

   Even though YANG is intend to ease the handling of data, this promise
   has not yet been fulfilled for Network Telemetry.  From subscribing
   on a YANG datastore, publishing a YANG modeled notification message
   from the network and viewing the data in a time series database,
   manual labor is needed to perform a data transformation to make a
   message broker and its data processing components with YANG
   notifications interoparable.

1.1.  Document Scope

   This document focuses on YANG-Push [RFC8639] as the messaging
   protocol between the network node and the Network Telemetry [RFC9232]
   data collection since YANG push contains a subscription id describing
   the event stream filter of the subscribed YANG data.  For a message
   broker and schema registry it focuses on Apache Kafka and Confluent
   Schema Registry [Con18] due its native capability to support
   different serializers and Schema languages, scales out well and being
   a de-facto standard for network operators today.

1.2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document makes use of the terms defined in [RFC8639], Apache
   Kafka [Kaf11] and Confluent Schema Registry Documentation [ConDoc18].

   The following terms are used as defined in [RFC8639].

   *  Publisher




Graf                     Expires 18 August 2024                 [Page 3]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


   *  Receiver

   *  Subscription

   *  Subscription ID

   *  Event stream filter

   *  Notification message

   The following terms are used as defined in Apache Kafka [Kaf11].

   *  Producer

   *  Consumer

   *  Topic

   *  Partition

   The following terms are used as defined in Confluent Schema Registry
   Documentation [ConDoc18].

   *  Schema

   *  Schema ID

   *  Schema Registry

   *  Subject

1.3.  Origins of YANG-Push

   With [RFC3535] the IAB set the requirements for Network Management in
   2003.  From these requirements NETCONF [RFC6241], NETCONF
   Notifications [RFC5277] and Restconf [RFC8040] has been defined to
   configure through <edit-config> and retrieve operational data through
   <get> and NETCONF notifications through <notification> from a YANG
   datastore on a network node.

   With YANG-Push, as defined in [RFC8639], [RFC8640] and [RFC8641],
   periodical and on-change subscriptions to the YANG datastore can be
   dynamically configured or statically configured.  When dynamically
   configured, messages are being published in the established NETCONF
   session, where when statically configured messages are being
   published through HTTPS-based [I-D.ietf-netconf-https-notif] or
   UDP-based [I-D.ietf-netconf-udp-notif] transport.  Section 3.7 of
   [RFC8641] describes push-update messages where the YANG subscribed



Graf                     Expires 18 August 2024                 [Page 4]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


   data is being published, where Section 2.7 of [RFC8639] describes the
   subscription state change notifications where changes in the
   subscription are being described.

1.4.  Origins of Apache Kafka

   Apache Kafka [Kaf11] messages can be produced into so called topics
   and consumed from.  Each topic has one or more partitions where
   messages are replicated or loadbalanced to scale out.  With the
   introduction of Confluent Schema Registry [Con18] a topic can contain
   one or more subjects.  A subject refers to a Schema definition.  The
   Schema definition or the Schema ID can be either prefixed to the
   message with the Apache Kafka serializer.  If the Schema ID is
   prefixed, the Schema needs to be previously be registered through a
   REST API to the Confluent Schema Registry where a Schema ID is being
   issued.  Messages can be validated against Schema when produced or
   consumed from topic to ensure Schema integrity of the message.  The
   type of Schema evolution scheme can be defined per subject.  Wherever
   non backward Schema changes are allowed or not.

2.  Motivation

   Text.

2.1.  Preserve Semantics

   The preservation of the YANG semantics, that includes the YANG data
   types as defined in [RFC6991] and the nested structure of the YANG
   module, throughout the data processing chain ensures that metrics can
   be processed and visualized as they were originally intended.  Not
   only for the user but also for an automated closed loop operation
   action.

2.2.  Preserve Semantic Information

   [RFC7950] defines in Section 7.21.3 and 7.21.4 the description and
   reference statement.  This information is intended for the user,
   describing in a human-readable fashion the meaning of a definition.
   In Data Mesh, this information can be imported from the Confluent
   Schema Registry into a Stream Catalog where subjects within Apache
   Kafka are identifyable and searchable.  An example of a Stream
   Catalog is Apache Atlas [Atl15].  It can also be applied for time
   series data visualization in a similar fashion.








Graf                     Expires 18 August 2024                 [Page 5]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


2.3.  Standardize Data Processing Integration

   Since the YANG Schema is preserved for operational metrics in Apache
   Kafka, a standartization for integration betwen network data
   collection and stream processor or time series database is implied.

3.  Elements of the Architecture

   The architecture consists of 6 elements.

   +------------------------------------------------------------+
   |                    Time Series Database                    |
   +------------------------------------------------------------+
                                  ^
                                  | (11) Ingest Data
                                  | According to Schema
   +------------------------------------------------------------+
   |                Time Series Database Ingestion              |
   +------------------------------------------------------------+
(9) Get  |  ^                                   ^ (8) Validate Kafka Message
 Schema  |  |                                   | Against Schema on Consumer
         |  |                                   |
         |  |                                   |
         |  | (10) Issue                        | (7) Produce Kafka Message
         v  | Schema             (5) Post       | with Schema ID prefixed
   +--------------------+          Schema  +--------------------+
   |     Confluent      | <--------------  |  Data Collection   |
   |  Schema Registry   | -------------->  | YANG-Push Receiver |
   +--------------------+ (6) Issue        +--------------------+
                          Schema ID     (3) Get |  ^ (2) Receive YANG-Push
                                         Schema |  | Subscription Start Message
                                                |  |   ^
                                                |  |   |
                                                |  |   | (4) Publish YANG-Push
                                                v  |   | Message with Subscription ID
   +--------------------+                  +--------------------+
   |      Network       | (1) Subscribe    |   Network Node     |
   |   Orchestration    | ---------------> | YANG-Push Publisher|
   +--------------------+                  +--------------------+

                    Figure 1: End to End Workflow

   The workflow diagram (Figure 1) describes the steps from establishing
   the YANG-Push subscription to Time Series Database ingestion.







Graf                     Expires 18 August 2024                 [Page 6]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


3.1.  YANG-Push Subscription

   With step number (1) in the workflow diagram, a YANG-Push
   subscription is according to Section 2.4 and 2.5 of [RFC8639]
   dynamically or statically configured, and with step (2) subscription
   state change notifications are sent according to section 2.7 from the
   YANG-Push publisher to the receiver to inform which event stream
   filter has been applied to which subscription ID.

   [I-D.ietf-netconf-yang-notifications-versioning] adds the capability
   to subscribe to a specific YANG module revision or a YANG module
   which needs to be backward compatible to in step (1) and adds the
   module name, revision and revision-label information into the
   subscription state change notifications in step (2).

3.2.  YANG-Push Publisher

   With step number (4) in the workflow diagram, a YANG-Push push-update
   or push-change-update message, depending on wherever periodical or
   on-change subscription has been established, is sent from the YANG-
   Push publisher to the receiver according to Section 3.7 of [RFC8639].

   [I-D.ahuang-netconf-notif-yang] defines the NETCONF notification
   header specified in [RFC5277] in YANG to enable JSON and CBOR
   encoding.

   [I-D.tgraf-netconf-notif-sequencing] adds sysName, messagePublisherId
   and sequenceNumber in the NETCONF notification header to each message
   to identify from which network node and publishing process, according
   to [I-D.ietf-netconf-distributed-notif] a network node with
   distributed architecture could have multiple messagePublisherId's,
   the message has been published from.  The sequenceNumber enables to
   recognize loss from the YANG-Push publisher in step (1) down to the
   Time Series Database Ingestion in step (11).

   [I-D.tgraf-netconf-yang-push-observation-time] adds observation-time
   or state-changed-observation-time in the YANG-Push push-update or
   push-change-update message, depending on wherever periodical or on-
   change subscription has been established.  observation-time describes
   when the operational metrics was obtained from the YANG datastore.
   Where state-changed-observation-time describes when the network state
   change was observed.









Graf                     Expires 18 August 2024                 [Page 7]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


3.3.  YANG-Push Receiver

   For all the YANG modules and revisions of each subscription ID in the
   subscription state change notification received in step number (3) in
   the workflow diagram, all the YANG module dependencies need to be
   determined through the YANG Library [RFC8525], and then through
   NETCONF <get-schema> rpc calls according to [RFC6022] all YANG
   modules need to be retrieved as described in step (3) in the workflow
   diagram.

   [I-D.lincla-netconf-yang-library-augmentation] extends the YANG
   Library so that not only the submodule but also the augmentation list
   can be obtained.

   The YANG data model for datastore push subscriptions is defined in
   Section 4.1 in [RFC8641].  Since the subscribed YANG data is
   referenced with datastore-subtree-filter or datastore-xpath-filter
   which where the anydata resp. xpath1.0 statement is used to represent
   an unknown set of nodes as defined in Section 7.10 and subset of a
   YANG module as defined in Section 6.4.1 of [RFC7950].  It is the
   current understanding that with the anydata statement as a reference,
   semantics is lost where with xpath1.0 statement it is not.

   A new YANG module augmenting ietf-notification, ietf-subscribed-
   notifications and the referenced YANG data in datastore-subtree-
   filter or datastore-xpath-filter could re-establish semantics needed
   for Schema registration and also enable the possibility to add
   additional metadata such as the applied event stream filter, YANG
   module name, revision and revision-label from the subscription state
   change notifications as described Section 3.1.

3.4.  YANG Schema Registry

   Confluent Schema Registry is pluggable.  Currently Supports AVRO,
   JSON Schema and Protobuf.  The YANG support is being developed at
   [Yak24] as part of this architecture.  Enable to register, obtain and
   compare [YSR24] YANG Schemas.  One YANG Schema with all its
   augmentations is being registered per YANG Push subscription ID. for
   each YANG Schema a locally significant Schema ID is being issued as
   described in step (6) in the workflow diagram.

3.5.  YANG Kafka Producer

   The previously issued Schema ID is prefixed to the previously in
   Section 3.3 described metadata augmented YANG push push-update
   message and serialized to a Apache Kafka topic in step (7) of the
   workflow diagram.




Graf                     Expires 18 August 2024                 [Page 8]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


3.6.  YANG Kafka Consumer

   From the Apache Kafka topic the message is being consumed and the
   prefixed Schema ID is being used in step 9 of the workflow diagram to
   retrieve the YANG Schema to validate the Schema integrity of the
   message.

3.7.  YANG Time Series Database Ingestion

   The time series database ingestion specifications are being derived
   with the in Section 3.6 already retrieved Schema ID and YANG push-
   update messages can be now ingested and indexed into the database
   table according to their semantics.

4.  Project Milestones

   IETF 115:

   *  Official Project Kickoff.

   *  [I-D.ietf-netconf-yang-notifications-versioning] extends semantics
      reference in subscription state change notification.

   IETF 116:

   *  YANG module with augmentations can be registered in Confluent
      Schema Registry with YANG extension [Yak24].

   *  [I-D.tgraf-netconf-notif-sequencing] extends NETCONF notification
      header with sysName, messagePublisherId and sequenceNumber.

   *  [I-D.tgraf-netconf-yang-push-observation-time] extends YANG-Push
      push-update or push-change-update message with observation-time or
      state-changed-observation-time.

   *  [I-D.ahuang-netconf-notif-yang] defines the NETCONF notification
      header specified in [RFC5277] in YANG.

   IETF 118:

   *  All relevant YANG modules for a subscribed xpath can be determined
      through the YANG Library [RFC8525] and retrieved throug NETCONF
      <get-schema> rpc calls according to [RFC6022].  Gap in YANG
      library addressed in
      [I-D.lincla-netconf-yang-library-augmentation].






Graf                     Expires 18 August 2024                 [Page 9]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


5.  Open Points

   Text.

6.  Security Considerations

   The security considerations.

7.  Implementation Status

   The implementation status.

8.  Acknowledgements

   The authors would like to thank Yannick Buchs and Benoit Claise for
   their review and valuable comments.

9.  References

9.1.  Normative References

   [Con18]    Yokota, R., "Confluent Schema Registry", Confluent
              Community and Apache Software Foundation, December 2018,
              <https://github.com/confluentinc/schema-registry/>.

   [ConDoc18] Yokota, R., "Confluent Schema Registry Documentation",
              Confluent Community and Apache Software Foundation,
              December 2018,
              <https://docs.confluent.io/platform/current/schema-
              registry/>.

   [I-D.ahuang-netconf-notif-yang]
              Feng, A. H., Francois, P., Graf, T., and B. Claise, "YANG
              model for NETCONF Event Notifications", Work in Progress,
              Internet-Draft, draft-ahuang-netconf-notif-yang-04, 21
              January 2024, <https://datatracker.ietf.org/doc/html/
              draft-ahuang-netconf-notif-yang-04>.

   [I-D.ietf-netconf-yang-notifications-versioning]
              Graf, T., Claise, B., and A. H. Feng, "Support of
              Versioning in YANG Notifications Subscription", Work in
              Progress, Internet-Draft, draft-ietf-netconf-yang-
              notifications-versioning-03, 20 October 2023,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              yang-notifications-versioning-03>.






Graf                     Expires 18 August 2024                [Page 10]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


   [I-D.lincla-netconf-yang-library-augmentation]
              Lin, Z. and B. Claise, "Augmentaiton Addition into the
              IETF-YANG-Library", Work in Progress, Internet-Draft,
              draft-lincla-netconf-yang-library-augmentation-00, 6
              November 2023, <https://datatracker.ietf.org/doc/html/
              draft-lincla-netconf-yang-library-augmentation-00>.

   [I-D.tgraf-netconf-notif-sequencing]
              Graf, T., Quilbeuf, J., and A. H. Feng, "Support of
              Hostname and Sequencing in YANG Notifications", Work in
              Progress, Internet-Draft, draft-tgraf-netconf-notif-
              sequencing-03, 14 January 2024,
              <https://datatracker.ietf.org/doc/html/draft-tgraf-
              netconf-notif-sequencing-03>.

   [I-D.tgraf-netconf-yang-push-observation-time]
              Graf, T., Claise, B., and A. H. Feng, "Support of Network
              Observation Timestamping in YANG Notifications", Work in
              Progress, Internet-Draft, draft-tgraf-netconf-yang-push-
              observation-time-00, 14 January 2024,
              <https://datatracker.ietf.org/doc/html/draft-tgraf-
              netconf-yang-push-observation-time-00>.

   [Kaf11]    Narkhede, N., "Apache Kafka", Apache Software Foundation,
              January 2011, <https://kafka.apache.org/>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC6022]  Scott, M. and M. Bjorklund, "YANG Module for NETCONF
              Monitoring", RFC 6022, DOI 10.17487/RFC6022, October 2010,
              <https://www.rfc-editor.org/info/rfc6022>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Subscription to YANG Notifications",
              RFC 8639, DOI 10.17487/RFC8639, September 2019,
              <https://www.rfc-editor.org/info/rfc8639>.




Graf                     Expires 18 August 2024                [Page 11]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.

   [Yak24]    Feng, F., "Yangkit", Apache Software Foundation, February
              2024, <https://github.com/yang-central/yangkit/>.

   [YSR24]    Elhassany, A., "Confluent YANG Schema Registry", Apache
              Software Foundation, February 2024,
              <https://github.com/confluentinc/schema-registry-yang-
              format/>.

9.2.  Informative References

   [Atl15]    Hortonworks, "Apache Atlas", Apache Software Foundation,
              May 2015, <https://atlas.apache.org/>.

   [Deh22]    Dehghani, Z., "Data Mesh", O'Reilly Media,
              ISBN 9781492092391, March 2022,
              <https://www.oreilly.com/library/view/data-
              mesh/9781492092384/>.

   [I-D.ietf-netconf-distributed-notif]
              Zhou, T., Zheng, G., Voit, E., Graf, T., and P. Francois,
              "Subscription to Distributed Notifications", Work in
              Progress, Internet-Draft, draft-ietf-netconf-distributed-
              notif-08, 6 October 2023,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              distributed-notif-08>.

   [I-D.ietf-netconf-https-notif]
              Jethanandani, M. and K. Watsen, "An HTTPS-based Transport
              for YANG Notifications", Work in Progress, Internet-Draft,
              draft-ietf-netconf-https-notif-15, 1 February 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              https-notif-15>.

   [I-D.ietf-netconf-udp-notif]
              Zheng, G., Zhou, T., Graf, T., Francois, P., Feng, A. H.,
              and P. Lucente, "UDP-based Transport for Configured
              Subscriptions", Work in Progress, Internet-Draft, draft-
              ietf-netconf-udp-notif-12, 21 January 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              udp-notif-12>.

   [Rab07]    VMware, "RabbitMQ", Mozilla Public License, February 2007,
              <https://rabbitmq.com/>.




Graf                     Expires 18 August 2024                [Page 12]

Internet-Draft    YANG-Push to Apache Kafka Integration    February 2024


   [RFC3535]  Schoenwaelder, J., "Overview of the 2002 IAB Network
              Management Workshop", RFC 3535, DOI 10.17487/RFC3535, May
              2003, <https://www.rfc-editor.org/info/rfc3535>.

   [RFC5277]  Chisholm, S. and H. Trevino, "NETCONF Event
              Notifications", RFC 5277, DOI 10.17487/RFC5277, July 2008,
              <https://www.rfc-editor.org/info/rfc5277>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8525]  Bierman, A., Bjorklund, M., Schoenwaelder, J., Watsen, K.,
              and R. Wilton, "YANG Library", RFC 8525,
              DOI 10.17487/RFC8525, March 2019,
              <https://www.rfc-editor.org/info/rfc8525>.

   [RFC8640]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Dynamic Subscription to YANG Events
              and Datastores over NETCONF", RFC 8640,
              DOI 10.17487/RFC8640, September 2019,
              <https://www.rfc-editor.org/info/rfc8640>.

   [RFC9232]  Song, H., Qin, F., Martinez-Julia, P., Ciavaglia, L., and
              A. Wang, "Network Telemetry Framework", RFC 9232,
              DOI 10.17487/RFC9232, May 2022,
              <https://www.rfc-editor.org/info/rfc9232>.

Author's Address

   Thomas Graf
   Swisscom
   Binzring 17
   CH-8045 Zurich
   Switzerland
   Email: thomas.graf@swisscom.com






Graf                     Expires 18 August 2024                [Page 13]
