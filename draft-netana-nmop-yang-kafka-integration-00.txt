



NMOP                                                             T. Graf
Internet-Draft                                                  Swisscom
Intended status: Informational                          13 February 2024
Expires: 16 August 2024


       An Architecture for YANG Push to Apache Kafka Integration
              draft-netana-nmop-yang-kafka-integration-00

Abstract

   This document describes the motivation and architecture of a native
   YANG Push notifications and YANG schema integration into Apache Kafka
   Message Broker and Confluent Schema Registry.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Operations and
   Management Area Working Group Working Group mailing list
   (nmop@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/nmop/.

   Source for this draft and an issue tracker can be found at
   https://github.com/network-analytics/draft-daisy-kafka-yang-
   integration/.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 16 August 2024.







Graf                     Expires 16 August 2024                 [Page 1]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Document Scope  . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
     1.3.  Origins of YANG Push  . . . . . . . . . . . . . . . . . .   4
     1.4.  Origins of Apache Kafka . . . . . . . . . . . . . . . . .   5
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     2.1.  Preserve and Use of Schema  . . . . . . . . . . . . . . .   5
     2.2.  Preserve and Use of Schema Information  . . . . . . . . .   5
     2.3.  Standardize Data Processing Integration . . . . . . . . .   5
   3.  Elements of the Architecture  . . . . . . . . . . . . . . . .   5
     3.1.  YANG Push Subscription  . . . . . . . . . . . . . . . . .   6
     3.2.  YANG Push Publisher . . . . . . . . . . . . . . . . . . .   6
     3.3.  YANG Push Receiver  . . . . . . . . . . . . . . . . . . .   6
     3.4.  YANG Schema Registry  . . . . . . . . . . . . . . . . . .   7
     3.5.  YANG Kafka Producer . . . . . . . . . . . . . . . . . . .   7
     3.6.  YANG Kafka Consumer . . . . . . . . . . . . . . . . . . .   7
     3.7.  YANG Time Series Database Ingestion . . . . . . . . . . .   7
   4.  Project Milestones  . . . . . . . . . . . . . . . . . . . . .   7
   5.  Open Points . . . . . . . . . . . . . . . . . . . . . . . . .   7
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   7.  Implementation Status . . . . . . . . . . . . . . . . . . . .   7
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   7
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     9.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9









Graf                     Expires 16 August 2024                 [Page 2]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


1.  Introduction

   Nowadays network operators are using YANG [RFC7950] to model their
   configurations and obtain YANG modelled data from their networks.  It
   is well understood that plain text are initially intended for humans
   and need effort to make it machine readable due to the lack of
   semantics.  YANG modeled data is addressing this need.

   Increasingly more network operators organizing their data in a Data
   Mesh [Deh22] where a message broker such as Apache Kafka [Kaf11] or
   RabbitMQ [Rab07] facilitates the exchange of messages among data
   processing components like a stream processor to filter, enrich,
   correlate or aggregate, or a time series database to store data.

   Even though YANG is intend to ease the handling of data, this promise
   has not yet been fulfilled.  From subscribing on a YANG datastore,
   publishing a YANG modeled notification message from the network and
   viewing the data in a time series database, manual labor is needed to
   perform a data transformation to make a message broker and its data
   processing components with YANG notifications interoparable.

1.1.  Document Scope

   This document focuses on YANG Push [RFC8639] as the messaging
   protocol between the network node and the Network Telemetry [RFC9232]
   data collection since YANG push contains a subscription id describing
   the event stream filter of the subscribed YANG data.  For a message
   broker and schema registry it focuses on Apache Kafka and Confluent
   Schema Registry [Con18] due its native capability to support
   different serializers and schema languages, scales out well and being
   a de-facto standard for network operators today.

1.2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document makes use of the terms defined in [RFC8639], Apache
   Kafka [Kaf11] and Confluent Schema Registry Documentation [ConDoc18].

   The following terms are used as defined in [RFC8639].

   *  Publisher

   *  Receiver



Graf                     Expires 16 August 2024                 [Page 3]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


   *  Subscription

   *  Subscription ID

   *  Event stream filter

   *  Notification message

   The following terms are used as defined in Apache Kafka [Kaf11].

   *  Producer

   *  Consumer

   *  Topic

   *  Partition

   The following terms are used as defined in Confluent Schema Registry
   Documentation [ConDoc18].

   *  Schema

   *  Schema ID

   *  Schema Registry

   *  Subject

1.3.  Origins of YANG Push

   With [RFC3535] the IAB set the requirements for Network Management in
   2003.  From these requirements Netconf [RFC6241], Netconf
   Notifications [RFC5277] and Restconf [RFC8040] has been defined to
   configure through <edit-config> and retrieve operational data through
   <get> and netconf notifications through <notification> from a YANG
   datastore on a network node.














Graf                     Expires 16 August 2024                 [Page 4]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


   With YANG push, as defined in [RFC8639], [RFC8640] and [RFC8641],
   periodical and on-change subscriptions to the YANG datastore can be
   dynamically configured or statically configured.  When dynamically
   configured, messages are being published in the established Netconf
   session, where when statically configured messages are being
   published through HTTPS-based [I-D.ietf-netconf-https-notif] or
   UDP-based [I-D.ietf-netconf-udp-notif] transport.  Section 3.7 of
   [RFC8641] describes push-update messages where the YANG subscribed
   data is being published, where Section 2.7 of [RFC8639] describes the
   subscription state change notifications where changes in the
   subscription are being described.

1.4.  Origins of Apache Kafka

   Apache Kafka [Kaf11] where messages can be produced into so called
   topics and consumed from.  Each topic has one or more partitions
   where messages are replicated or loadbalanced to scale out.  With the
   introduction of Confluent Schema Registry [Con18] a topic can contain
   one or more subjects.  A subject refers to a schema definition.  The
   schema definition or the schema ID can be either prefixed to the
   message with the Apache Kafka serializer.  If the schema ID is
   prefixed, the schema needs to be previously be regsitered through a
   REST API to the Confluent Schema Registry where a schema ID is being
   issued.  Messages can be validated against schema when produced or
   consumed from topic to ensure schema integrity of the message.  The
   type of schema evolution scheme can be defined per subject.  Wherever
   non backward schema changes are allowed or not.

2.  Motivation

   Text.

2.1.  Preserve and Use of Schema

   Text.

2.2.  Preserve and Use of Schema Information

   Text.

2.3.  Standardize Data Processing Integration

   Text.

3.  Elements of the Architecture

   Text.




Graf                     Expires 16 August 2024                 [Page 5]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


   +------------------------------------------------------------+
   |                    Time Series Database                    |
   +------------------------------------------------------------+
                                  ^
                                  | (11) Ingest Data
                                  | According to Schema
   +------------------------------------------------------------+
   |                Time Series Database Ingestion              |
   +------------------------------------------------------------+
(8) Get  |  ^                                   ^ (10) Validate Kafka Message
 Schema  |  |                                   | Against Schema on Consumer
         |  |                                   |
         |  |                                   |
         |  | (9) Issue                         | (7) Produce Kafka Message
         v  | Schema             (5) Post       | with Schema ID prefixed
   +--------------------+          Schema  +--------------------+
   |     Confluent      | <--------------  |  Data Collection   |
   |  Schema Registry   | -------------->  | YANG Push Receiver |
   +--------------------+ (6) Issue        +--------------------+
                          Schema ID     (4) Get |  ^ (2) Receive YANG Push
                                         Schema |  | Subscription Start Message
                                                |  |   ^
                                                |  |   |
                                                |  |   | (3) Publish YANG Push
                                                v  |   | Message with Subscription ID
   +--------------------+                  +--------------------+
   |      Network       | (1) Subscribe    |   Network Node     |
   |   Orchestration    | ---------------> | YANG Push Publisher|
   +--------------------+                  +--------------------+

                    Figure 1: End to End Workflow

   The workflow diagram (Figure 1) describes the steps from establishing
   the YANG Push subscription to Time Series Database ingestion.

3.1.  YANG Push Subscription

   Text.

3.2.  YANG Push Publisher

   Text.

3.3.  YANG Push Receiver

   Text.





Graf                     Expires 16 August 2024                 [Page 6]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


3.4.  YANG Schema Registry

   Text.

3.5.  YANG Kafka Producer

   Text.

3.6.  YANG Kafka Consumer

   Text.

3.7.  YANG Time Series Database Ingestion

   Text.

4.  Project Milestones

   Text.

5.  Open Points

   Text.

6.  Security Considerations

   The security considerations.

7.  Implementation Status

   The security considerations.

8.  Acknowledgements

   The authors would like to thank xxx for their review and valuable
   comments.

9.  References

9.1.  Normative References

   [Con18]    Yokota, R., "Confluent Schema Registry", Confluent
              Community and Apache Software Foundation, December 2018,
              <https://github.com/confluentinc/schema-registry/>.







Graf                     Expires 16 August 2024                 [Page 7]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


   [ConDoc18] Yokota, R., "Confluent Schema Registry Documentation",
              Confluent Community and Apache Software Foundation,
              December 2018,
              <https://docs.confluent.io/platform/current/schema-
              registry/>.

   [Kaf11]    Narkhede, N., "Apache Kafka", Apache Software Foundation,
              January 2011, <https://kafka.apache.org/>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Subscription to YANG Notifications",
              RFC 8639, DOI 10.17487/RFC8639, September 2019,
              <https://www.rfc-editor.org/info/rfc8639>.

   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.

9.2.  Informative References

   [Deh22]    Dehghani, Z., "Data Mesh", O'Reilly Media,
              ISBN 9781492092391, March 2022,
              <https://www.oreilly.com/library/view/data-
              mesh/9781492092384/>.

   [I-D.ietf-netconf-https-notif]
              Jethanandani, M. and K. Watsen, "An HTTPS-based Transport
              for YANG Notifications", Work in Progress, Internet-Draft,
              draft-ietf-netconf-https-notif-15, 1 February 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              https-notif-15>.

   [I-D.ietf-netconf-udp-notif]
              Zheng, G., Zhou, T., Graf, T., Francois, P., Feng, A. H.,
              and P. Lucente, "UDP-based Transport for Configured



Graf                     Expires 16 August 2024                 [Page 8]

Internet-Draft    YANG Push to Apache Kafka Integration    February 2024


              Subscriptions", Work in Progress, Internet-Draft, draft-
              ietf-netconf-udp-notif-12, 21 January 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              udp-notif-12>.

   [Rab07]    VMware, "RabbitMQ", Mozilla Public License, February 2007,
              <https://rabbitmq.com/>.

   [RFC3535]  Schoenwaelder, J., "Overview of the 2002 IAB Network
              Management Workshop", RFC 3535, DOI 10.17487/RFC3535, May
              2003, <https://www.rfc-editor.org/info/rfc3535>.

   [RFC5277]  Chisholm, S. and H. Trevino, "NETCONF Event
              Notifications", RFC 5277, DOI 10.17487/RFC5277, July 2008,
              <https://www.rfc-editor.org/info/rfc5277>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8640]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Dynamic Subscription to YANG Events
              and Datastores over NETCONF", RFC 8640,
              DOI 10.17487/RFC8640, September 2019,
              <https://www.rfc-editor.org/info/rfc8640>.

   [RFC9232]  Song, H., Qin, F., Martinez-Julia, P., Ciavaglia, L., and
              A. Wang, "Network Telemetry Framework", RFC 9232,
              DOI 10.17487/RFC9232, May 2022,
              <https://www.rfc-editor.org/info/rfc9232>.

Author's Address

   Thomas Graf
   Swisscom
   Binzring 17
   CH-8045 Zurich
   Switzerland
   Email: thomas.graf@swisscom.com







Graf                     Expires 16 August 2024                 [Page 9]
